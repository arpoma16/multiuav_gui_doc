// https://likec4.dev/playground/
// https://github.dev/likec4/example-cloud-system
specification {
  element actor {
    style{
      shape person
    }
  }
  element system
  element service
  element app
  element container
  element component
  element UAV {
    style{
      icon https://icons.terrastruct.com/aws%2FInternet%20of%20Things%2FIoT_Travel_light-bg.svg
    }
  }

  tag api
  relationship async // allow "typed" relationship

}
 
model {
  customer = actor 'Customer' {
    description 'Monitor of UAV'
    -> ui 'open in browser'
  }
  device = UAV 'Device' {
    description 'ROS enviroment & 
    RSTP server of UAV'
  }
 
  GCS = system 'GCS' {
    description  'Ground control Station'

    ui = container 'Frontend' {
      description 'Single web aplication'
      technology: 'Reactjs node V18'
      style {
        shape browser
      }
      -> backend 'request via HTTPS'
    }
    backend = container 'GCS Backend' {
      technology: 'Javascript Nodejs V18'
      description '
        Implements business logic,
        comunication with UAVs using ROS
        and exposes as REST API 
      '
      -> mediamtx 'API REST'
      -> Rosbridge 'UDP socket'
      -> device 'FTP'
    }
    mediamtx = container 'Multimedia server' {
      description ' RealTime video Transmission'
      -> device 'RTSP H264'
    }

    Rosbridge = container 'ROSBridge' {
       -> RosMultimaster 'ROS'
    } 
    RosMultimaster = container 'Multimaster FLK' {
      -> device 'ROS'
    }
  }
    customer -> GCS 'Control and monitoring'
    GCS -> device '[FTP,ROS,RSTP]'
}
 
views {
 
  view index {
    title 'Landscape view'
 
    include customer,
    *
  }
 
  view of GCS {
    include customer,*

    style customer {
      color secondary 
    }
 
    style GCS {
      color muted
    }
  }
 
}